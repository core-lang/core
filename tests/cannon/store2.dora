let mut glob_bool: Bool = false;
let mut glob_char: Char = 'x';
let mut glob_byte: UInt8 = 0u8;
let mut glob_int32: Int32 = 0i32;
let mut glob_int64: Int64 = 0i64;
let mut glob_float: Float32 = 0.0f32;
let mut glob_double: Float64 = 0.0;
let mut glob_string: String = "";
let mut glob_obj: Foo = Foo();

fun main(): Unit {
    let obj = Foo();
    init_globs(true, '5', 5u8, 5i32, 5i64, 5f32, 5f64, "5", obj);
    
    assert(glob_bool == true);
    assert(glob_char == '5');
    assert(glob_byte == 5u8);
    assert(glob_int32 == 5i32);
    assert(glob_int64 == 5i64);
    assert(glob_float == 5f32);
    assert(glob_double == 5f64);
    assert(glob_string == "5");
    assert(glob_obj === obj);
}

fun init_globs(bool: Bool, char: Char, byte: UInt8, int32: Int32, int64: Int64, float32: Float32, float64: Float64, string: String, obj: Foo): Unit {
    glob_bool = bool;
    glob_char = char;
    glob_byte = byte;
    glob_int32 = int32;
    glob_int64 = int64;
    glob_float = float32;
    glob_double = float64;
    glob_string = string;
    glob_obj = obj;  
}

class Foo