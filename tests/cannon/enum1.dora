fn main() {    
    assert(eq(Foo::A, Foo::B).not());
    assert(eq(Foo::B, Foo::B));
    assert(eq(Foo::B, Foo::A).not());

    assert(ne(Foo::A, Foo::B));
    assert(ne(Foo::B, Foo::B).not());
    assert(ne(Foo::B, Foo::A));
}

fn eq(x: Foo, y: Foo): Bool {
    return x == y;
}

fn ne(x: Foo, y: Foo): Bool {
    return x != y;
}

enum Foo {
    A,
    B
}