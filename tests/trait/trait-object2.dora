trait Foo { fun test(): Int32; }

class Baz(value: Int32)

impl Foo for Baz {
    fun test(): Int32 { self.value }
}

struct Bar(value: Int32)

impl Foo for Bar {
    fun test(): Int32 { self.value }
}

fun main() {
    assert(invoke(baz(17i32)) == 17i32);
    assert(invoke(baz(0i32)) == 0i32);
    assert(invoke(baz(101i32)) == 101i32);

    assert(invoke(bar(17i32)) == 17i32);
    assert(invoke(bar(0i32)) == 0i32);
    assert(invoke(bar(101i32)) == 101i32);
}

fun baz(value: Int32): Foo { Baz(value) as Foo }

fun bar(value: Int32): Foo { Bar(value) as Foo }

fun invoke(foo: Foo): Int32 { foo.test() }
