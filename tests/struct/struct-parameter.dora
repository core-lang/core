fun main() {
    assert(3i32 == tpl1(Foo(1i32, 2i32), 4711i32));
    assert(6i32 == tpl2(1i32, Foo(2i32, 3i32), 4711i32));
    assert(10i32 == tpl3(1i32, 2i32, Foo(3i32, 4i32), 4711i32));
    assert(15i32 == tpl4(1i32, 2i32, 3i32, Foo(4i32, 5i32), 4711i32));
    assert(21i32 == tpl5(1i32, 2i32, 3i32, 4i32, Foo(5i32, 6i32), 4711i32));
    assert(28i32 == tpl6(1i32, 2i32, 3i32, 4i32, 5i32, Foo(6i32, 7i32), 4711i32));
    assert(36i32 == tpl7(1i32, 2i32, 3i32, 4i32, 5i32, 6i32, Foo(7i32, 8i32), 4711i32));
    assert(45i32 == tpl8(1i32, 2i32, 3i32, 4i32, 5i32, 6i32, 7i32, Foo(8i32, 9i32), 4711i32));
}

struct Foo(first: Int32, second: Int32)

fun tpl1(x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    x.first + x.second
}

fun tpl2(a0: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + x.first + x.second
}

fun tpl3(a0: Int32, a1: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + a1 + x.first + x.second
}

fun tpl4(a0: Int32, a1: Int32, a2: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + a1 + a2 + x.first + x.second
}

fun tpl5(a0: Int32, a1: Int32, a2: Int32, a3: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + a1 + a2 + a3 + x.first + x.second
}

fun tpl6(a0: Int32, a1: Int32, a2: Int32, a3: Int32, a4: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + a1 + a2 + a3 + a4 + x.first + x.second
}

fun tpl7(a0: Int32, a1: Int32, a2: Int32, a3: Int32, a4: Int32, a5: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + a1 + a2 + a3 + a4 + a5 + x.first + x.second
}

fun tpl8(a0: Int32, a1: Int32, a2: Int32, a3: Int32, a4: Int32, a5: Int32, a6: Int32, x: Foo, control: Int32): Int32 {
    assert(control == 4711i32);
    a0 + a1 + a2 + a3 + a4 + a5 + a6 + x.first + x.second
}
