enum Foo[T] { A(T), B }

fun main(): Unit {
  let value = Foo[String]::A("abc");
  foo(value);
  if value
  ... is Foo::A(str) { assert(str == "abc"); }
  ... is Foo::B { unreachable[()]() };

  let value = Foo[String]::B;
  if value
  ... is Foo::A(_) { unreachable[()]() }
  ... is Foo::B { () };
}

fun foo(x: Foo[String]): Foo[String] {
  let y = x;
  y
}
