//= vm-args "--gc-parallel-minor --gc-worker=2 --gc-verify"

fun main() {
    var x = Foo(none[Foo]());
    var i = 0;

    while i < 100 {
        x = Foo(some[Foo](x));
        Foo(some[Foo](x));
        i = i + 1;
    }

    forceMinorCollect();
    assert(x.next.value.next.isPresent);

    i = 0;

    while i < 100 {
        x = Foo(some[Foo](x));
        Foo(some[Foo](x));
        i = i + 1;
    }

    forceMinorCollect();
    assert(x.next.value.next.isPresent);
    forceMinorCollect();
    assert(x.next.value.next.isPresent);
}

class Foo(let next: Option[Foo])