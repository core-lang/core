fun main() {
  testBothEmpty();
  testNeedleEmpty();
  testHaystackEmpty();
  testNeedleLarger();
  testSuccess();
  testMultipleMatch();
  testFailure();
}

fun testBothEmpty() {
  assert("".indexOfFirst("").has(0i64));
}

fun testNeedleEmpty() {
  assert("abc".indexOfFirst("").has(0i64));
}

fun testHaystackEmpty() {
  assert("".indexOfFirst("abc").isNone());
}

fun testNeedleLarger() {
  assert("abc".indexOfFirst("abcdef").isNone());
}

fun testSuccess() {
  assert("abcdef".indexOfFirst("abc").has(0i64));
  assert("defabc".indexOfFirst("abc").has(3i64));
  assert("ababbaadef".indexOfFirst("aa").has(5i64));
  assert("apapplapple".indexOfFirst("apple").has(6i64));
}

fun testMultipleMatch() {
  assert("abcdefabc".indexOfFirst("abc").has(0i64));
}

fun testFailure() {
  assert("def".indexOfFirst("abc").isNone());
}
