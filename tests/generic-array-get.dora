fun main() {
  let x = Array::<Int>(5, 100);
  assert(x[0] == 100);
  assert(int_array_get(x, 4) == 100);

  let x = Array::<Long>(7, 200L);
  assert(x[6] == 200L);
  assert(long_array_get(x, 0) == 200L);

  let x = Array::<Float>(6, 1.0F);
  assert(x[0] == 1.0F);
  assert(float_array_get(x, 5) == 1.0F);

  let x = Array::<Double>(4, 2.0);
  assert(x[0] == 2.0);
  assert(double_array_get(x, 3) == 2.0);

  let x = Array::<String>(3, "hello");
  assert(x[0] == "hello");
  assert(str_array_get(x, 2) == "hello");

  let x = Array::<Foo>(1, Foo(1));
  assert(x[0] !== nil);
  assert(x[0].y == 1);
  assert(foo_array_get(x, 0) !== nil);
  assert(foo_array_get(x, 0).y == 1);

  let x = Array::<Foo>(2, nil);
  assert(x[0] === nil);
  assert(foo_array_get(x, 0) === nil);
}

fun int_array_get(x: Array<Int>, idx: Int) -> Int {
  return x[idx];
}

fun long_array_get(x: Array<Long>, idx: Int) -> Long {
  return x[idx];
}

fun float_array_get(x: Array<Float>, idx: Int) -> Float {
  return x[idx];
}

fun double_array_get(x: Array<Double>, idx: Int) -> Double {
  return x[idx];
}

fun str_array_get(x: Array<String>, idx: Int) -> String {
  return x[idx];
}

fun foo_array_get(x: Array<Foo>, idx: Int) -> Foo {
  return x[idx];
}

class Foo(let y: Int)
