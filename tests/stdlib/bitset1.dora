fun main(): Unit {
    let set = std::BitSet::new(64i64);
    set.insert(0i64);
    set.insert(63i64);
    assert(set.contains(0i64));
    assert(set.contains(63i64));

    var i = 1i32;
    while i < 63i32 {
        assert(set.contains(i.toInt64()).not());
        i = i + 1i32;
    }

    set.insert(0i64);
    set.insert(1i64);
    set.insert(31i64);
    set.insert(32i64);
    set.insert(63i64);

    assert(set.contains(0i64));
    assert(set.contains(1i64));
    assert(set.contains(2i64).not());
    assert(set.contains(30i64).not());
    assert(set.contains(31i64));
    assert(set.contains(32i64));
    assert(set.contains(33i64).not());
    assert(set.contains(62i64).not());
    assert(set.contains(63i64));

    set.remove(0i64);
    set.remove(63i64);

    assert(set.contains(0i64).not());
    assert(set.contains(1i64));
    assert(set.contains(31i64));
    assert(set.contains(32i64));
    assert(set.contains(63i64).not());
}