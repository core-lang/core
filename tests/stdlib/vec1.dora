fun main() {
    let vec = Vec::<Int>();
    assert(vec.length() == 0);
    assert(vec.capacity() == 0);

    vec.push(1);
    vec.push(2);
    vec.push(3);
    assert(vec.length() == 3);
    assert(vec.capacity() == 4);

    vec.push(4);
    assert(vec.length() == 4);
    assert(vec.capacity() == 4);

    vec.push(5);
    assert(vec.length() == 5);
    assert(vec.capacity() == 8);
    assert(vec[0] == 1);
    assert(vec[1] == 2);
    assert(vec[2] == 3);
    assert(vec[3] == 4);
    assert(vec[4] == 5);

    vec[0] = vec[0] + 2;
    vec[1] = vec[0] - 1;

    assert(vec[0] == 3);
    assert(vec[1] == 2);

    vec.trimToLen();
    assert(vec.length() == 5);
    assert(vec.capacity() == 5);

    assert(vec[0] == 3);
    assert(vec[1] == 2);
    assert(vec[2] == 3);
    assert(vec[3] == 4);
    assert(vec[4] == 5);
}