fun main(): Unit {
    let set = std::HashSet[Int32]::new();
    assert(set.isEmpty);

    var i = 0i32;

    while i < 1000i32 {
        set.insert(i);
        i = i + 1i32;
    }

    assert(set.size == 1000i64);
    assert(set.isEmpty.not);
    assert(set.capacity == 2048i64);
    assert(set.contains(-1i32).not);
    assert(set.contains(1000i32).not);

    i = 0i32;

    while i < 1000i32 {
        assert(set.contains(i));
        i = i + 1i32;
    }

    i = 900i32;

    while i < 1000i32 {
        set.remove(i);
        assert(set.contains(i).not);
        i = i + 1i32;
    }

    assert(set.size == 900i64);
    assert(set.isEmpty.not);
    assert(set.capacity == 2048i64);

    i = 0i32;

    while i < 900i32 {
        assert(set.contains(i));
        i = i + 1i32;
    }

    i = 300i32;

    while i < 900i32 {
        set.remove(i);
        assert(set.contains(i).not);
        i = i + 1i32;
    }

    assert(set.size == 300i64);
    assert(set.isEmpty.not);
    assert(set.capacity == 1024i64);
}
