fun main(): Unit {
  float64();
  float32();
}

fun float64(): Unit {
  let map = std::HashMap[Float64, String]::new((0.0, "a"));

  assert(map.size() == 1);
  assert(map.contains(0.0));
  assert(map.get(0.0).getOrPanic() == "a");
  assert(map.contains(-0.0)); // FIXME: this only works by coincidence, because the hash function sucks
  assert(map.get(-0.0).getOrPanic() == "a"); // FIXME: this only works by coincidence, because the hash function sucks
}

fun float32(): Unit {
  let map = std::HashMap[Float32, String]::new((0.0f32, "a"));

  assert(map.size() == 1);
  assert(map.contains(0.0f32));
  assert(map.get(0.0f32).getOrPanic() == "a");
  assert(map.contains(-0.0f32).not()); // FIXME: should be true instead
  // assert(map.get(-0.0f32).getOrPanic() == "a"); // FIXME: should be true instead
}
