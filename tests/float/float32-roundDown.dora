fun main() {
  let x = Float32::infinityNegative().roundDown();
  assert(x == Float32::infinityNegative());

  let x = (-2.5f32).roundDown();
  assert(x == -3.0f32);

  let x = (-1.5f32).roundDown();
  assert(x == -2.0f32);

  let x = (-2.5f32).roundDown();
  assert(x == -3.0f32);

  let x = (-1.5f32).roundDown();
  assert(x == -2.0f32);

  let x = (-1.23f32).roundDown();
  assert(x == -2.0f32);

  let x = (-1.0f32).roundDown();
  assert(x == -1.0f32);

  let x = (-0.0f32).roundDown();
  assert(x == -0.0f32);

  let x = 0.0f32.roundDown();
  assert(x == 0.0f32);

  let x = 1.0f32.roundDown();
  assert(x == 1.0f32);

  let x = 1.23f32.roundDown();
  assert(x == 1.0f32);

  let x = 1.5f32.roundDown();
  assert(x == 1.0f32);

  let x = 2.5f32.roundDown();
  assert(x == 2.0f32);

  let x = Float32::infinityPositive().roundDown();
  assert(x == Float32::infinityPositive());

  let x = Float32::notANumber().roundDown();
  assert(x.isNan());
}
