/**
 * A time-based amount of time, such as '34.5 seconds'.
 *
 * This class models a quantity or amount of time in terms of seconds and nanoseconds. It can be
 * accessed using other duration-based units, such as minutes and hours. In addition, the {@link
 * ChronoUnit#DAYS DAYS} unit can be used and is treated as exactly equal to 24 hours, thus ignoring
 * daylight savings effects. See {@link Period} for the date-based equivalent to this class.
 *
 * A physical duration could be of infinite length. For practicality, the duration is stored with
 * constraints similar to {@link Instant}. The duration uses nanosecond resolution with a maximum
 * value of the seconds that can be held in a {@code long}. This is greater than the current
 * estimated age of the universe.
 *
 * The range of a duration requires the storage of a number larger than a {@code long}. To achieve
 * this, the class stores a {@code long} representing seconds and an {@code int} representing
 * nanosecond-of-second, which will always be between 0 and 999,999,999.
 *
 * The duration is measured in "seconds", but these are not necessarily identical to the scientific
 * "SI second" definition based on atomic clocks. This difference only impacts durations measured
 * near a leap-second and should not affect most applications. See {@link Instant} for a discussion
 * as to the meaning of the second and time-scales.
 *
 * <h3>Specification for implementors</h3> This class is immutable and thread-safe.
 *
 * Constructs an instance of {@code Duration} using seconds and nanoseconds.
 *
 * @param seconds
 *   the length of the duration in seconds, positive or negative
 * @param nanos
 *   the nanoseconds within the second, from 0 to 999,999,999
 */
@pub class Duration(seconds: Int64, nanos: Int32) {}
